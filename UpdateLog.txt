Update log.
2021.9.3 
Version 1.2
This update adds a collection of practical applications of AFO, including some practical application problems solved by the AFO algorithm, and more practical applications will be added later.
(1) The four industrial design problems with constraints mentioned in the paper
(2) Optimising the weights and thresholds of neural networks
(3) Aviation scheduling - multi-sector
(4) Flexible shop floor scheduling
(5) Raster maps - robot pathfinding
(6) Logistics centre location problem: factory-centre-demand point
(7) Multi-row shop floor scheduling - considering AVG partitioning
(8) Oil plant-unmanned aircraft up path planning
(9) Power system bus optimization based on tide calculation
(10) Optimization study of cold chain distribution logistics vehicle scheduling for a dairy company
(11) Plasma processing trajectory planning for 6R industrial robots
(12) TSP problem and its variants
Notes.
(1) All code is written using matlab 2021a, but there may be compatibility problems between matlab 2021a and previous versions, and garbled codes may appear. If the code is garbled, use txt to open it and copy the code from txt to .m file
(2) Improved algorithms for AFO will be added later, as well as more application examples. The lab has participated in and completed hundreds of applications based on swarm intelligence, including power systems, workshop scheduling, logistics and distribution, site layout, UAV path planning, robot path planning, complex network optimisation, resource scheduling, optimisation of various machine learning algorithms and other directions. The lab will continue to select classic cases to add to this code collection, so please stay tuned. If you need code for a particular direction, please leave a message or contact us by email.
(3) Our lab has published a large number of high-level improvement algorithms, which will be added to this code collection one after another, so please pay attention to them.

本次更新添加了AFO的实际应用集合，包含了一些实际应用问题被AFO算法求解，后续会添加更多的实际应用案例
（1）论文中提及的四种带约束的工业设计问题
（2）优化神经网络的权值和阈值
（3）航空调度-多扇区
（4）柔性车间调度
（5）栅格地图-机器人寻路
（6）物流中心选址问题：工厂-中心-需求点
（7）多行车间调度-考虑AVG分区
（8）石油厂区-无人机了路径规划
（9）基于潮流计算的电力系统总线优化
（10）某乳制品企业冷链配送物流车辆调度优化研究
（11）面向6R工业机器人等离子加工轨迹规划
（12）TSP问题及其变种问题
注意：
（1）所有代码使用matlab2021a编写，但matlab 2021a和之前版本可能存在兼容问题，有可能出现乱码。如果乱码，使用txt打开，再将txt中的代码复制到.m文件当中
（2）后续会添加AFO的改进算法，以及更多的应用案例。本实验室参与并完成了各类基于群智能优化的应用项目数百例，涉及电力系统，车间调度，物流配送，选址布局，无人机路径规划、机器人路径规划，复杂网络优化，资源调度，优化各类机器学习算法等各个方向。本实验室会继续挑选经典案例添加到本代码集合当中，请及时关注。如果需要某个方向的代码，可以留言或者邮箱联系。
（3）本实验室发表过大量高水平改进算法，会陆续添加到本代码集中，请多多关注。




Update log.
1. 2021.1.1 
Version 1.0
All experiments of the paper are run based on this version, except for the experiments of running time.

2. 2021.1.7 
Version 1.1
The runtime experiments of the paper are based on this version
Disadvantages of Version 1.0
(1) Too slow
(2) The total number of evaluations is T*(N+m) after the catastrophe strategy is triggered, and m is the number of times the catastrophe strategy is triggered. 
However, this problem will not affect the results of this experiment because the maximum number of iterations of the experiment is 50, and the catastrophe strategy will basically not be triggered.

Updated content of Version 1.1
(1) Optimization based on the advantages of MATLAB. The problem of too slow speed is solved.
The core reason for the excessive slowness was that strategy 2 did not use matrix operations in version 1.0.
Note: In order to use matrix operations, this version updates all individuals of the population when using the third strategy, but calculates the fitness value only for those individuals that are eligible. The total number of evaluations is still T*N.
         If you want to rewrite this code in another language, we suggest you refer to AFO1. AFO2 is optimized for MATLAB and may not be suitable for your language.
(2) After using the catastrophe strategy, the current iteration number +1,the total evaluation number reverts to T*N

Author: Zhe Yang
E-mail: 454170989@qq.com
School:University of Manchester

更新日志：
1、2021.1.1 
版本 1.0
论文所有的实验基于该版本运行，除运行时间的实验。
缺点：
（1）速度过慢
（2）灾变策略触发后，总评价次数为T*(N+m)，m为灾变策略的触发次数。但是，该问题不会影响本实验的结果，因为实验最大迭代次数为50，灾变策略基本不会触发。
2、2021.1.7 
版本 1.1
论文的运行时间实验基于该版本
更新内容：
（1）基于MATLAB的优点，进行优化。解决了速度过慢的问题。
速度过慢的原因是，(1)策略2在1.0版本中未使用矩阵运算。(2)在编程时使用了结构体，结构体的传递和操作严重减缓程序速度
注1：为了使用矩阵运算，该版本在使用第三种策略时，对种群的全部个体进行更新，但仅对符合条件的个体，计算适应度值。总评价次数仍为T*N。
注2:  减少了调用结构体的次数，如果最求更快的速度，可进一步改写程序，删除所有的结构体，直接传递变量
（2）使用灾变策略后，当前迭代次数+1,总评价次数恢复为T*N

作者：杨喆
邮箱：454170989@qq.com
学校：曼彻斯特大学


